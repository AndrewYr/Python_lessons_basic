import random
import math


__author__ = 'Юрченко Андрей Константинович'

# Задача-1: Дано произвольное целое число, вывести самую большую цифру этого числа.
# Например, дается x = 58375.
# Нужно вывести максимальную цифру в данном числе, т.е. 8.
# Подразумевается, что мы не знаем это число заранее.
# Число приходит в виде целого беззнакового.
# Подсказки:
# * постарайтесь решить задачу с применением арифметики и цикла while;
# * при желании и понимании решите задачу с применением цикла for.
number = random.randint(1,1000000)
eggs = 0
for item in str(number):
    spam = int(item)
    if spam > eggs:
        eggs = spam
print(number)
print(eggs)

# Задача-2: Исходные значения двух переменных запросить у пользователя.
# Поменять значения переменных местами. Вывести новые значения на экран.
# Решите задачу, используя только две переменные.
# Подсказки:
# * постарайтесь сделать решение через действия над числами;
# * при желании и понимании воспользуйтесь синтаксисом кортежей Python.
number1 = int(input('Введите первое целое число'))
number2 = int(input('Введите второе целое число'))
number1 = number1 + number2
number2 = number1 - number2
number1 = number1 - number2
print(number1)
print(number2)


# Задача-3: Напишите программу, вычисляющую корни квадратного уравнения вида
# ax² + bx + c = 0.
# Коэффициенты уравнения вводятся пользователем.
# Для вычисления квадратного корня воспользуйтесь функцией sqrt() модуля math:
# import math
# math.sqrt(4) - вычисляет корень числа 4
print('Решение квадратного уравнения вида\nax^2+bx+c=0\n')

# запрашиваем у пользователя аргументы уравнения
a = input('Введите аргумет a:')
b = input('Введите аргумет b:')
c = input('Введите аргумет c:')

# приводим ввод пользователя с клавиатуры к числовому типу с плавающей точкой
a_float = float(a)
b_float = float(b)
c_float = float(c)

# определяем значение корней по умолчанию
x1 = 'Отсутствует'
x2 = 'Отсутствует'

print('\nРезультат решения задания №3:\n')

# используем инструкцию ветвления для определения логики программы в зависимости от значения аргументов
if a_float == 0 and b_float == 0:
	print('выражение вида \nc = 0\n не является уравнение')
else:
	# выводим решаемое уравнение
	print('Решение уравнения:', '\n(', a_float, '*', 'x^2', ')', '+', '(', b_float, '*', 'x', ')', '+', '(', c_float, ')', '=', '0')
	if a_float != 0:
		# выводим получившееся уравнение
		# вычисляем дискриминант
		disc = b_float**2 - 4 * a_float * c_float
		# используем инструкцию ветвления для определения логики программы взависимости от значения дискриминанта
		print('\nЗначение дискриминанта:', disc)
		if disc > 0:
			# используем функцию sqrt из модуля стандартной библиотеки - math
			x1 = (-b_float - math.sqrt(disc)) / (2 * a_float)
			x2 = (-b_float + math.sqrt(disc)) / (2 * a_float)
		elif disc == 0:
			x1 = -b_float / (2 * a_float)
	elif b_float != 0:
		x1 = -c_float / b_float
		x2 = '\nНе существует, так как уравнение вида\nbx + c = 0\n не является кводратным'
		# выводим получившиеся корни
	print('\nЗначение первого корня уравнения:', x1, '\nЗначение второго корня уравнения:', x2)
